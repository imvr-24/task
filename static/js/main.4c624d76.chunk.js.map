{"version":3,"sources":["components/timezone.component.jsx","components/card.component.jsx","components/cards.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["TimeZoneComponent","timezone","tz","ctz","handleChange","tmp","forEach","prop","push","value","label","className","defaultValue","placeholder","options","onChange","Card","inps","currentZone","currentDT","CardBody","styled","div","props","color","Button","button","theme","main","defaultProps","CustomButton","RD","style","flex","borderRight","title","Cards","display","textAlign","marginRight","margin","width","App","convertTimeZone","zone","fetch","then","res","json","result","zones","zoneName","timestamp","dt","convertToFormttedDate","setState","selectedDT","selectedZone","console","log","Date","toLocaleString","state","formatted","Object","keys","this","path","component","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c624d76.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Select from \"react-select\";\n\nexport const TimeZoneComponent = ({ timezone, tz, ctz, handleChange }) => {\n  \n  const tmp = [...tz];\n  \n  timezone.forEach((prop) => {\n    tmp.push({ value: prop, label: prop });\n  });\n  \n  return (\n    <div className=\"container-lt\">\n      <div className=\"row ml-4\">\n        <Select className=\"mt-4 col-md-4 \" defaultValue={ctz} />\n        <Select\n          className=\"mt-4 col-md-4 \"\n          placeholder=\"Timezone to Convert\"\n          options={tmp}\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = ({ inps }) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <h2> {inps.currentZone} </h2>\r\n            <p> {inps.currentDT} </p>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport './card.styles.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { GrDocumentPdf } from \"react-icons/gr\";\r\nimport { IoDocumentSharp } from \"react-icons/io5\";\r\nimport { FaCaretDown } from \"react-icons/fa\";\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  height: 200px;\r\n  border: 1px solid ${props => props.color};\r\n  justify-content: space-around;\r\n  font-size: 5em;\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst CardBody = styled.div`\r\n    background-color: white;\r\n    border: 2px solid black;\r\n    border-radius: 0px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 1em;\r\n  margin: 0.25em;\r\n  padding: 0.25em 1em;\r\n  background-color: ${props => props.theme.color};\r\n  border: 2px solid ${props => props.theme.main};\r\n`;\r\n\r\nButton.defaultProps = {\r\n    theme: {\r\n        main: \"palevioletred\"\r\n    }\r\n}\r\n\r\nconst theme = {\r\n    main: \"gray\",\r\n    color: 'white'\r\n};\r\n\r\nconst CustomButton = styled(Button)`\r\n  color: #fff;\r\n  border-color: #3E505D;\r\n  background-color: #3E505D;\r\n`;\r\n\r\nconst RD = (props) => {\r\n    return (\r\n        <div style={{ flex: 1, borderRight: '1px solid black' }} >\r\n            <div style={{ color: 'gray' }}>\r\n                {props.title}\r\n            </div>\r\n            <div>\r\n                {props.value}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Cards = () => (\r\n    <CardBody className='card card-header text-center' style={{}}>\r\n        <div style={{ display: \"flex\" }}>\r\n            <div style={{ flex: 1 }}>\r\n                <h5 style={{ textAlign: 'left' }}>{`Cancel / recall payment, GBP 1,000.00`} </h5>\r\n                <h6 style={{ textAlign: 'left' }}>{`1234567890123456 (GB), KUIML Business Company`}</h6>\r\n            </div>\r\n\r\n            <div style={{ flex: 1 }}>\r\n                <GrDocumentPdf style={{ marginRight: '0.5em' }} /> | <IoDocumentSharp style={{ margin: '0 0.5em' }} />\r\n                <Button theme={theme}>Reject</Button>\r\n                <CustomButton>Authorize</CustomButton>\r\n            </div>\r\n        </div>\r\n        <div className=\"cards\" style={{ width: '60%' }}>\r\n            <div style={{ display: \"flex\", flex: 1 }}>\r\n                <RD title='Request reference' value='SET29383ABCH' />\r\n                <RD title='Category' value='Payment' />\r\n                <RD title='Request Status' value='Pending authorisation' />\r\n            </div>\r\n        </div>\r\n    </CardBody>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\n\nimport timezone from \"./timezone.json\";\nimport { TimeZoneComponent } from './components/timezone.component';\nimport { Card } from './components/card.component.jsx'\n\nimport { Cards } from './components/cards.component.jsx'\nimport { Route } from \"react-router-dom\";\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nlet ctz = [{\n  value: 'Asia/Kolkata',\n  label: 'Asia/Kolkata'\n}]\nlet tz = []\n\nexport class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentZone: '',\n      currentDT: '',\n      selectedZone: '',\n      selectedDT: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.timezonedb.com/v2.1/get-time-zone?key=SC4W3H2GK55S&format=json&by=zone&zone=Asia/Kolkata\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          ;\n          this.setState({\n            currentZone: result.zoneName,\n            currentDT: result.formatted\n          }, () => console.log('Done'));\n        }\n      );\n  }\n\n  convertTimeZone = (zone) => {\n    fetch(`https://api.timezonedb.com/v2.1/list-time-zone?key=SC4W3H2GK55S&format=json&zone=${zone.value}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          const { zoneName, timestamp } = result.zones[0];\n          const dt = this.convertToFormttedDate(timestamp);\n          this.setState({\n            selectedDT: dt,\n            selectedZone: zoneName\n          }, () => console.log('Convert to  Time Zone'));\n        }\n      )\n  };\n\n  convertToFormttedDate = (timestamp) => {\n\n    const milliseconds = timestamp * 1000;\n    const dateObject = new Date(milliseconds);\n    const dateFormat = dateObject.toLocaleString();\n\n    return dateFormat;\n  };\n\n  handleChange = selectedZone => {\n    this.setState({ selectedZone: selectedZone.label });\n    this.convertTimeZone(selectedZone)\n    console.log(`Option selected:`, selectedZone);\n  };\n\n  render() {\n    return (\n      <div className='container ct'>\n        <TimeZoneComponent timezone={Object.keys(timezone)} tz={tz} ctz={ctz} handleChange={this.handleChange} />\n        <div className='row'>\n          <div className='col-md-4'>\n            <Card inps={this.state} />\n          </div>\n\n          {\n            this.state.selectedDT ? (\n              <div className='col-md-4'>\n                <div className='card-container'>\n                  <h2> {this.state.selectedZone} </h2>\n                  <p> {this.state.selectedDT} </p>\n                </div>\n              </div>\n            ) : null\n          }\n        </div>\n\n        <Route path='/' component={Cards}></Route>\n        {`--`}\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}